version: '3.8'

services:
  redis:
    image: redis:5.0.8
    networks:
      - mlcraft_default

  actions:
    build:
      context: ./services/actions/
    networks:
      - mlcraft_default

  cubejs:
    build:
      context: ./services/cubejs
    networks:
      - mlcraft_default

  hasura:
    build:
      context: ./services/hasura
    volumes:
      - ./services/hasura/migrations:/hasura-migrations
      - ./services/hasura/metadata:/hasura-metadata
      - ./services/hasura/seeds:/seeds
    environment:
      ENABLE_TELEMETRY: "false"
    networks:
      - mlcraft_default

  cubestore:
    image: cubejs/cubestore:${CUBESTORE_VERSION:-v0.32.4}
    environment:
      - CUBESTORE_REMOTE_DIR=/cube/data
    volumes:
      - .cubestore:/cube/data
    networks:
      - mlcraft_default

  auth:
    build:
      context: ./services/actions/
    networks:
      - mlcraft_default

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:5.0
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mlcraft_default

networks:
  mlcraft_default:
    external: true
