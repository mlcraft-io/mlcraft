version: '3.8'

services:
  postgres:
    image: postgres:12.2
    ports:
       - 5435:5432
    volumes:
      - pgstorage-data:/var/lib/postgresql/data
      - ./etc/postgres.conf:/var/lib/postgresql/data/postgresql.conf
    env_file:
      - .env
      - .dev.env
    networks:
      - mlcraft_default

  actions:
    restart: always
    command: yarn start.dev
    volumes:
      - ./services/actions/src:/app/src
      - ./services/actions/index.js:/app/index.js
    ports:
      - 3001:3000
    env_file:
      - .env
      - .dev.env

  cubejs:
    restart: always
    command: yarn start.dev
    volumes:
      - ./services/cubejs:/app
    ports:
      - 4000:4000
      - 9231:9229
    env_file:
      - .env
      - .dev.env

  hasura_cli:
    restart: always
    command: ./start.sh
    build:
      context: ./scripts/containers/hasura_cli
    ports:
      - 9693:9693
      - 9695:9695
    env_file:
      - .env
      - .dev.env
    environment:
      ENABLE_TELEMETRY: "false"
      CONSOLE_MODE: cli
    volumes:
      - ./services/hasura/migrations:/hasura/migrations
      - ./services/hasura/metadata:/hasura/metadata
      - ./services/hasura/config.yaml:/hasura/config.yaml
    depends_on:
      - hasura
    networks:
      - mlcraft_default

  hasura:
    restart: always
    ports:
       - 8080:8080
    env_file:
      - .env
      - .dev.env
    environment:
      ENABLE_TELEMETRY: "false"
      CONSOLE_MODE: server
    depends_on:
      - postgres
      - redis

  hasura_plus:
    restart: always
    build:
      context: ./scripts/containers/hasura_backend_plus
    ports:
       - 8081:3000
    env_file:
      - .env
      - .dev.env
    depends_on:
      - postgres

volumes:
  pgstorage-data:
