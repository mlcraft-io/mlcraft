Table public.users {
  id uuid [pk, unique, not null]
  display_name text
  avatar_url text
  created_at timestamp [not null]
  updated_at timestamp [not null]
}

Table auth.account_providers {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  account_id uuid [ref: > auth.accounts.id, not null]
  auth_provider text [ref: > auth.providers.provider, not null]
  auth_provider_unique_id text [not null]

  Indexes {
    (auth_provider, account_id) [unique]
    (auth_provider_unique_id, auth_provider) [unique]
  }
}

Table auth.accounts {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, unique]
  active boolean
  email text
  new_email text
  password_hash text
  default_role text [ref: > auth.roles.role, default: 'user']
  is_anonymous boolean [default: false]
  custom_register_data jsonb
  otp_secret text
  mfa_enabled boolean [default: false]
  ticket uuid [not null]
  ticket_expires_at timestamptz [not null]
}

Table auth.providers {
  provider text [pk, unique, not null]
}

Table auth.refresh_tokens {
  refresh_token uuid [pk, unique, not null]
  created_at timestamptz [not null]
  expires_at timestamptz [not null]
  account_id uuid [ref: > auth.accounts.id, not null]
}

Table auth.roles {
  role text [pk, unique, not null]
}

Table auth.account_roles {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  account_id uuid [ref: > auth.accounts.id, not null]
  role text [ref: > auth.accounts.default_role, not null]

  Indexes {
    (account_id, role) [unique]
  }
}

Table public.teams {
  id uuid [pk, unique, not null]
  name text [not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
}

Table public.datasources {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  name text [not null]
  db_type text [not null]
  db_params jsonb [default: '{}', not null]
  team_id uuid [ref: > public.teams.id]
}

Table public.dataschemas {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  datasource_id uuid [ref: > public.datasources.id, not null]
  name text [not null]
  code text [not null]
  checksum text
  version_id uuid [ref: > public.versions.id]
}

Table public.explorations {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  datasource_id uuid [ref: > public.datasources.id, not null]
  playground_state jsonb [default: '{}', not null]
  playground_settings jsonb [default: '{}', not null]
}

Table public.dashboards {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  name text [not null]
  layout jsonb
  team_id uuid [ref: > public.teams.id]
}

Table public.pinned_items {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  dashboard_id uuid [ref: > public.dashboards.id, not null]
  exploration_id uuid [ref: > public.explorations.id, not null]
  name text [not null]
  spec jsonb [default: '{}', not null]
  spec_config jsonb [default: '{}', not null]
}

Table public.members {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  team_id uuid [ref: > public.teams.id, not null]
}

Enum public.team_roles {
  owner
  member
}

Table public.member_roles {
  id uuid [pk, unique, not null]
  member_id uuid [ref: > public.members.id, not null]
  team_role public.team_roles

  Indexes {
    (member_id, team_role) [unique]
  }
}

Table public.events {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  data jsonb [default: '{}', not null]
  page_context jsonb [default: '{}', not null]
  device_context jsonb [default: '{}', not null]
  user jsonb [default: '{}', not null]
}

Table public.reports {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  team_id uuid [ref: > public.teams.id]
  exploration_id uuid [ref: > public.explorations.id, not null]
  name text [not null]
  schedule text [not null]
  delivery_type text [not null]
  delivery_config jsonb [not null]
}

Table public.sql_credentials {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  datasource_id uuid [ref: > public.datasources.id, not null]
  user_id uuid [ref: > public.users.id, not null]
  username text [not null]
  password text

  Indexes {
    (datasource_id, user_id, username) [unique]
  }
}

Table public.alerts {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  user_id uuid [ref: > public.users.id, not null]
  team_id uuid [ref: > public.teams.id]
  exploration_id uuid [ref: > public.explorations.id, not null]
  name text [not null]
  delivery_type text [not null]
  delivery_config jsonb [not null]
  trigger_config jsonb [not null]
  schedule text [not null]
  locks_config jsonb [not null]
}

Table public.versions {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  branch_id uuid [ref: > public.branches.id, not null]
  checksum text [not null]
  user_id uuid [ref: > public.users.id, not null]
  markdown_doc text
}

Table public.branches {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  name text [default: 'main', not null]
  user_id uuid [ref: > public.users.id, not null]
  datasource_id uuid [ref: > public.datasources.id, not null]
  status public.branch_statuses [default: 'created']
}

Enum public.branch_statuses {
  active
  created
  archived
}

Table public.request_logs {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  request_id text
  user_id uuid [ref: > public.users.id]
  datasource_id uuid [ref: > public.datasources.id]
  start_time timestamptz
  end_time timestamptz
  path text
}

Table public.request_event_logs {
  id uuid [pk, unique, not null]
  created_at timestamptz [not null]
  updated_at timestamptz [not null]
  request_id text [ref: > public.request_logs.request_id]
  event text
  duration numeric
  queue_prefix text
  time_in_queue numeric
  path text
  query_key jsonb [default: '[]']
  query_key_md5 text
  query jsonb
  query_sql text
  timestamp timestamptz
  error text
}

