openapi: 3.0.0
info:
  title: Cube API
  version: 1.0.0
  description: Cube API
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
paths:
  /api/v1/load:
    get:
      summary: Get the data for a query
      parameters:
        - name: query
          in: query
          description: URL encoded Cube Query or an array of queries
          required: true
          type: string
        - name: queryType
          in: query
          description: Set to `multi` for multiple queries for data blending
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              query:
                type: array
                items:
                  type: object
              data:
                type: array
                items:
                  type: object
              annotation:
                type: object
              total:
                type: integer
      security:
        - BearerAuth: []
        - HasuraAuth: []
  /api/v1/sql:
    get:
      summary: Get the SQL Code generated by Cube
      parameters:
        - name: query
          in: query
          description: URLencoded Cube Query
          required: true
          type: string
      responses:
        200:
          description: SQL query details
          schema:
            type: object
            properties:
              sql:
                type: object
      security:
        - BearerAuth: []
        - HasuraAuth: []

  /api/v1/meta:
    get:
      summary: Get meta-information for cubes defined in the data model
      responses:
        200:
          description: Array of cube metadata
          schema:
            type: object
            properties:
              cubes:
                type: array
                items:
                  type: object
      security:
        - BearerAuth: []
        - HasuraAuth: []

  /api/v1/run-scheduled-refresh:
    get:
      summary: Trigger a scheduled refresh run to refresh pre-aggregations
      parameters:
        - name: queryingOptions
          in: query
          description: URL encoded Cube Query options such as timezone
          type: string
      responses:
        200:
          description: Empty object response if scheduled successfully
          schema:
            type: object
      security:
        - BearerAuth: []
        - HasuraAuth: []

  /api/v1/pre-aggregations/jobs:
    post:
      summary: Trigger pre-aggregation build jobs or retrieve statuses of such jobs
      parameters:
        - in: body
          name: body
          description: Job action and selector details
          required: true
          schema:
            type: object
            properties:
              action:
                type: string
              selector:
                type: object
      responses:
        200:
          description: Array of tokens of triggered jobs or job status details
          schema:
            type: array
            items:
              type: object
      security:
        - BearerAuth: []
        - HasuraAuth: []

  /readyz:
    get:
      summary: Returns the ready state of the deployment
      responses:
        200:
          description: Status of deployment readiness
          schema:
            type: object
            properties:
              health:
                type: string

  /livez:
    get:
      summary: Returns the liveness state of the deployment
      responses:
        200:
          description: Status of deployment liveness
          schema:
            type: object
            properties:
              health:
                type: string
  /api/v1/run-sql:
    post:
      summary: 'Run SQL query'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            type: 'object'
            properties:
              query:
                type: 'string'
                description: 'The SQL query to run.'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            type: 'array'
            items:
              type: 'object'
        '500':
          description: 'Failed operation'
          schema:
            type: 'object'
            properties:
              code:
                type: 'string'
                description: 'Error code.'
              message:
                type: 'string'
                description: 'Error message.'
      security:
        - BearerAuth: []
        - HasuraAuth: []
  /api/v1/test:
    get:
      summary: 'Test connection'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
        - HasuraAuth: []
  /api/v1/get-schema:
    get:
      summary: 'Get schema'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
        - HasuraAuth: []
  /api/v1/generate-dataschema:
    post:
      summary: 'Generate data schema'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            type: 'object'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
        - HasuraAuth: []
  /api/v1/validate-code:
    post:
      summary: 'Validate code'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            type: 'object'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
        - HasuraAuth: []
  /api/v1/pre-aggregation-preview:
    post:
      summary: 'Pre-aggregation preview'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            type: 'object'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
        - HasuraAuth: []
  /api/v1/pre-aggregations:
    get:
      summary: 'Get pre-aggregations'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
        - HasuraAuth: []