openapi: 3.0.0
info:
  title: Cube API
  version: 1.0.0
  description: Cube API
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    GenerateDataSchemaRequest:
      type: object
      properties:
        tables:
          type: array
          items:
            type: string
        overwrite:
          type: boolean
        branchId:
          type: string
        format:
          type: string
          default: yaml
      required:
        - tables
        - overwrite
        - branchId
        - format
    PreAggregationPreviewRequest:
      type: object
      properties:
        preAggregationId:
          type: string
        tableName:
          type: string
        timezone:
          type: string
          default: UTC
      required:
        - preAggregationId
        - tableName
        - timezone
    RunSQLRequest:
      type: object
      properties:
        query:
          type: string
      required:
        - query
  parameters:
    HasuraDatasourceId:
      name: x-hasura-datasource-id
      in: header
      description: The ID of the datasource
      required: true
      schema:
        type: string
        format: uuid
    HasuraBranchId:
      name: x-hasura-branch-id
      in: header
      description: The ID of the branch
      required: false
      schema:
        type: string
        format: uuid

paths:
  /readyz:
    get:
      summary: Returns the ready state of the deployment
      responses:
        200:
          description: Status of deployment readiness
          schema:
            type: object
            properties:
              health:
                type: string

  /livez:
    get:
      summary: Returns the liveness state of the deployment
      responses:
        200:
          description: Status of deployment liveness
          schema:
            type: object
            properties:
              health:
                type: string
  /api/v1/load:
    get:
      summary: Get the data for a provided query
      parameters:
        - name: query
          in: query
          description: URL encoded Cube Query or an array of queries
          required: true
          type: string
        - name: queryType
          in: query
          description: Set to `multi` for multiple queries for data blending
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              query:
                type: array
                items:
                  type: object
              data:
                type: array
                items:
                  type: object
              annotation:
                type: object
              total:
                type: integer
      security:
        - BearerAuth: []
  /api/v1/sql:
    get:
      summary: Get the SQL Code generated by Cube
      parameters:
        - name: query
          in: query
          description: URLencoded Cube Query
          required: true
          type: string
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        200:
          description: SQL query details
          schema:
            type: object
            properties:
              sql:
                type: object
      security:
        - BearerAuth: []

  /api/v1/meta:
    get:
      summary: Get meta-information for cubes defined in the data model
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        200:
          description: Array of cube metadata
          schema:
            type: object
            properties:
              cubes:
                type: array
                items:
                  type: object
      security:
        - BearerAuth: []

  /api/v1/run-sql:
    post:
      summary: 'Run SQL query on the datasource'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunSQLRequest'
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            type: 'array'
            items:
              type: 'object'
        '500':
          description: 'Failed operation'
          schema:
            type: 'object'
            properties:
              code:
                type: 'string'
                description: 'Error code.'
              message:
                type: 'string'
                description: 'Error message.'
      security:
        - BearerAuth: []
  /api/v1/test:
    get:
      summary: 'Test connection of the datasource'
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
  /api/v1/get-schema:
    get:
      summary: 'Get tables schema from the datasource'
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
  /api/v1/generate-dataschema:
    post:
      summary: 'Generate data models from the datasource tables'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateDataSchemaRequest'
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
  /api/v1/validate-code:
    post:
      summary: 'Validate data models code'
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
  /api/v1/pre-aggregation-preview:
    post:
      summary: 'Pre-aggregation preview'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreAggregationPreviewRequest'
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []
  /api/v1/pre-aggregations:
    get:
      summary: 'Get pre-aggregations'
      parameters:
        - $ref: '#/components/parameters/HasuraDatasourceId'
        - $ref: '#/components/parameters/HasuraBranchId'
      responses:
        '200':
          description: 'Successful operation'
      security:
        - BearerAuth: []