- table:
    schema: auth
    name: account_providers
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: provider
    using:
      foreign_key_constraint_on: auth_provider
- table:
    schema: auth
    name: account_roles
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: roleByRole
    using:
      foreign_key_constraint_on: role
- table:
    schema: auth
    name: accounts
  object_relationships:
  - name: role
    using:
      foreign_key_constraint_on: default_role
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_providers
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_roles
  - name: refresh_tokens
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: refresh_tokens
- table:
    schema: auth
    name: migrations
- table:
    schema: auth
    name: providers
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: auth_provider
        table:
          schema: auth
          name: account_providers
- table:
    schema: auth
    name: refresh_tokens
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
- table:
    schema: auth
    name: roles
  array_relationships:
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: role
        table:
          schema: auth
          name: account_roles
  - name: accounts
    using:
      foreign_key_constraint_on:
        column: default_role
        table:
          schema: auth
          name: accounts
- table:
    schema: public
    name: dashboards
- table:
    schema: public
    name: dataschemas
- table:
    schema: public
    name: datasources
  object_relationships:
  - name: team
    using:
      foreign_key_constraint_on: team_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - db_params
      - db_type
      - name
      - user_id
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - db_params
      - db_type
      - name
      - created_at
      - updated_at
      - id
      - team_id
      - user_id
      filter:
        _or:
        - user_id:
            _eq: X-Hasura-User-Id
        - team:
            members:
              user_id:
                _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - db_params
      - db_type
      - name
      filter:
        _or:
        - user_id:
            _eq: X-Hasura-User-Id
        - team:
            members:
              user_id:
                _eq: X-Hasura-User-Id
      check:
        _or:
        - user_id:
            _eq: X-Hasura-User-Id
        - team:
            members:
              user_id:
                _eq: X-Hasura-User-Id
  delete_permissions:
  - role: user
    permission:
      filter:
        _or:
        - user_id:
            _eq: X-Hasura-User-Id
        - team:
            members:
              user_id:
                _eq: X-Hasura-User-Id
- table:
    schema: public
    name: explorations
- table:
    schema: public
    name: members
- table:
    schema: public
    name: pinned_items
- table:
    schema: public
    name: teams
  array_relationships:
  - name: members
    using:
      foreign_key_constraint_on:
        column: team_id
        table:
          schema: public
          name: members
- table:
    schema: public
    name: users
  object_relationships:
  - name: account
    using:
      manual_configuration:
        remote_table:
          schema: auth
          name: accounts
        insertion_order: null
        column_mapping:
          id: user_id
